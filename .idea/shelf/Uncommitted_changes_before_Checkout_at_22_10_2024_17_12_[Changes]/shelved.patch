Index: src/test/resources/features/US09_Merve.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/features/US09_Merve.feature b/src/test/resources/features/US09_Merve.feature
--- a/src/test/resources/features/US09_Merve.feature	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ b/src/test/resources/features/US09_Merve.feature	(date 1729609554017)
@@ -1,0 +1,8 @@
+@US09
+Feature: The user should be able to access the contact information by clicking the "Contact" link at the top of the page.
+
+  Scenario: The user should be able to access the contact information by clicking the "Contact" link at the top of the page.
+    Given The visibility and clickability of the Contact button are verified.
+    Then It is verified that when the Contact button is clicked, a page containing a contact form opens.
+    Then The visibility of the name, email, phone number, and message fields in the contact form, as well as the ability to enter information into them, is verified.
+    Then It is verified that a message can be sent by entering the name, email, phone number, and message details into the contact form.
\ No newline at end of file
Index: src/test/java/runners/Runner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package runners;\n\nimport io.cucumber.junit.Cucumber;\nimport io.cucumber.junit.CucumberOptions;\nimport org.junit.runner.RunWith;\n\n@RunWith(Cucumber.class)\n@CucumberOptions(\n        plugin = {\n                \"pretty\",//generates reports in the console as well\n                \"html:target/cucumber-reports.html\",\n                \"json:target/json-reports/cucumber.json\",\n                \"junit:target/xml-reports/cucumber.xml\",\n                \"rerun:target/failedRerun.txt\",\n                \"com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:\"\n        },\n        monochrome = false,//makes the console reports more readable\n        features = \"./src/test/resources/features\",//path of the features folder\n        glue = {\"stepDefinitions\", \"hooks\"},//path of the stepdefinitions folder\n        dryRun = false, //generate the missing step definitions only. Do not run the existing step definitions\n<<<<<<< HEAD\n        tags = \"@US03\"\n=======\n        tags = \"@US14\"\n\n>>>>>>> fatma\n)\npublic class Runner {\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/runners/Runner.java b/src/test/java/runners/Runner.java
--- a/src/test/java/runners/Runner.java	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ b/src/test/java/runners/Runner.java	(date 1729609611477)
@@ -18,12 +18,7 @@
         features = "./src/test/resources/features",//path of the features folder
         glue = {"stepDefinitions", "hooks"},//path of the stepdefinitions folder
         dryRun = false, //generate the missing step definitions only. Do not run the existing step definitions
-<<<<<<< HEAD
-        tags = "@US03"
-=======
-        tags = "@US14"
-
->>>>>>> fatma
+        tags = "@US09"
 )
 public class Runner {
 }
\ No newline at end of file
Index: src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java
===================================================================
diff --git a/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java b/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java
deleted file mode 100644
--- a/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ /dev/null	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
@@ -1,21 +0,0 @@
-package stepDefinitions;
-
-import io.cucumber.java.en.Then;
-import io.cucumber.java.en.When;
-import utilities.ConfigReader;
-import utilities.Driver;
-
-
-public class US06_Sümeyye_StepDefs {
-
-    @When("İlgili web siteye gidilir")
-    public void i̇lgili_web_siteye_gidilir() throws InterruptedException {
-
-        Driver.getDriver().get(ConfigReader.getProperty("baseUrl"));
-    }
-
-
-
-
-
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
deleted file mode 100644
--- a/.idea/workspace.xml	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ /dev/null	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
@@ -1,238 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="AutoImportSettings">
-    <option name="autoReloadType" value="SELECTIVE" />
-  </component>
-  <component name="ChangeListManager">
-    <list default="true" id="8aeaeea6-4d09-4f71-a369-474301a18c77" name="Changes" comment="" />
-    <list default="true" id="8aeaeea6-4d09-4f71-a369-474301a18c77" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_09_2024,_10_15 PM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_09_2024,_10_16 PM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_09_2024__10_15PM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_09_2024__10_16PM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/pages/HomePage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/pages/HomePage.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/pages/RandomPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/pages/RandomPage.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/runners/Runner.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/runners/Runner.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/stepDefinitions/US14_Fatma_StepDefs.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/stepDefinitions/US14_Fatma_StepDefs.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/utilities/ReusableMethods.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/utilities/ReusableMethods.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/resources/features/US14_Fatma.feature" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/resources/features/US14_Fatma.feature" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test-output/embedded1.png" beforeDir="false" afterPath="$PROJECT_DIR$/test-output/embedded1.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test-output/embedded2.png" beforeDir="false" afterPath="$PROJECT_DIR$/test-output/embedded2.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test-output/embedded3.png" beforeDir="false" afterPath="$PROJECT_DIR$/test-output/embedded3.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test-output/embedded4.png" beforeDir="false" afterPath="$PROJECT_DIR$/test-output/embedded4.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test-output/embedded5.png" beforeDir="false" afterPath="$PROJECT_DIR$/test-output/embedded5.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test-output/embedded6.png" beforeDir="false" afterPath="$PROJECT_DIR$/test-output/embedded6.png" afterDir="false" />
-    </list>
-    <option name="SHOW_DIALOG" value="false" />
-    <option name="HIGHLIGHT_CONFLICTS" value="true" />
-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-    <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="FileTemplateManagerImpl">
-    <option name="RECENT_TEMPLATES">
-      <list>
-        <option value="Class" />
-      </list>
-    </option>
-  </component>
-  <component name="Git.Settings">
-    <option name="RECENT_BRANCH_BY_REPOSITORY">
-      <map>
-        <entry key="$PROJECT_DIR$" value="master" />
-      </map>
-    </option>
-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-  </component>
-  <component name="GitHubPullRequestSearchHistory">{
-  &quot;lastFilter&quot;: {
-    &quot;state&quot;: &quot;OPEN&quot;,
-    &quot;assignee&quot;: &quot;Arslnmerv&quot;
-  }
-}</component>
-  <component name="GithubPullRequestsUISettings">{
-  &quot;selectedUrlAndAccountId&quot;: {
-    &quot;url&quot;: &quot;https://github.com/fatmakaa/KnotisseProject.git&quot;,
-    &quot;accountId&quot;: &quot;9852423e-2b6c-4376-87cc-8a308ae85b89&quot;
-  }
-}</component>
-  <component name="MarkdownSettingsMigration">
-    <option name="stateVersion" value="1" />
-  </component>
-  <component name="ProjectColorInfo">{
-  &quot;associatedIndex&quot;: 0
-}</component>
-  <component name="ProjectId" id="2lqT5q87fDQtEEFgnJq2MdiE48o" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
-    <ConfirmationsSetting value="2" id="Add" />
-  </component>
-  <component name="ProjectViewState">
-    <option name="hideEmptyMiddlePackages" value="true" />
-    <option name="showLibraryContents" value="true" />
-  </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Cucumber Java.Feature: US03_Merve.executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user can perform a search using the \&quot;THROW PILLOWS\&quot; option from the dropdown without registering, access the products and their details on the results page, and see the total number of results displayed..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user can perform a search using the 'ALL' option from the dropdown without registering, access the products and product details on the results page, and see the total number of results..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user can perform a search using the 'KNOTISSE PRODUCTION' option from the dropdown without registering, access the products and their details on the results page, and see the total number of results displayed..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user can perform a search using the 'THROW PILLOWS' option from the dropdown without registering, access the products and their details on the results page, and see the total number of results displayed..executor&quot;: &quot;Debug&quot;,
-    &quot;Cucumber Java.Scenario: The user can perform a search using the 'UPHOLSTERY' option from the dropdown without registering, view the products and their details on the resulting page, and see the total number of results..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user can search using the 'VINTAGE' option from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user can search using the differet options from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user can search via the dropdown using the 'ANTIQUE RUGS' option without registering, access the products and their details on the resulting page, and see the total number of results..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user can search via the dropdown using the 'ANTIQUE RUGS' option without registering, access the products and their details on the resulting page, and see the total number of results.executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user performs a search using the \&quot;KNOTISSE PRODUCTION\&quot; option without registering, accesses the product results and details, views the total number of results, and sorts the products by rating..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user searches for a specific type of product and views the relevant results..executor&quot;: &quot;Run&quot;,
-    &quot;Cucumber Java.Scenario: The user should be able to apply filters to their searches made through the dropdown without registering..executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.Runner.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;mrv&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/humai/IdeaProjects/KnotisseProject&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.3137931&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;
-  }
-}</component>
-  <component name="RecentsManager">
-    <key name="CopyClassDialog.RECENTS_KEY">
-      <recent name="stepDefinitions" />
-    </key>
-  </component>
-  <component name="RunManager" selected="JUnit.Runner">
-    <configuration name="Scenario: The user can perform a search using the 'THROW PILLOWS' option from the dropdown without registering, access the products and their details on the results page, and see the total number of results displayed." type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
-      <option name="CUCUMBER_CORE_VERSION" value="5" />
-      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/resources/features/US03_Merve.feature" />
-      <option name="GLUE" value="stepDefinitions hooks" />
-      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
-      <module name="KnotisseProject" />
-      <option name="NAME_FILTER" value="^The user can perform a search using the \'THROW PILLOWS\' option from the dropdown without registering\, access the products and their details on the results page\, and see the total number of results displayed\.$" />
-      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^The user can perform a search using the \'THROW PILLOWS\' option from the dropdown without registering\, access the products and their details on the results page\, and see the total number of results displayed\.$&quot;" />
-      <option name="SUGGESTED_NAME" value="Scenario: The user can perform a search using the 'THROW PILLOWS' option from the dropdown without registering, access the products and their details on the results page, and see the total number of results displayed." />
-      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="io.cucumber.core.cli.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="Scenario: The user can search using the 'VINTAGE' option from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results." type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
-      <option name="CUCUMBER_CORE_VERSION" value="5" />
-      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/resources/features/US03_Merve.feature" />
-      <option name="GLUE" value="stepDefinitions hooks" />
-      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
-      <module name="KnotisseProject" />
-      <option name="NAME_FILTER" value="^The user can search using the \'VINTAGE\' option from the dropdown without registering\, access the products and product details on the resulting page\, and see the total number of results\.$" />
-      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^The user can search using the \'VINTAGE\' option from the dropdown without registering\, access the products and product details on the resulting page\, and see the total number of results\.$&quot;" />
-      <option name="SUGGESTED_NAME" value="Scenario: The user can search using the 'VINTAGE' option from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results." />
-      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="io.cucumber.core.cli.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="Scenario: The user can search using the differet options from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results." type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
-      <option name="CUCUMBER_CORE_VERSION" value="5" />
-      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/resources/features/US03_Merve.feature" />
-      <option name="GLUE" value="stepDefinitions hooks" />
-      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
-      <module name="KnotisseProject" />
-      <option name="NAME_FILTER" value="^The user can search using the differet options from the dropdown without registering\, access the products and product details on the resulting page\, and see the total number of results\.$" />
-      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^The user can search using the differet options from the dropdown without registering\, access the products and product details on the resulting page\, and see the total number of results\.$&quot;" />
-      <option name="SUGGESTED_NAME" value="Scenario: The user can search using the differet options from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results." />
-      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="io.cucumber.core.cli.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="Scenario: The user searches for a specific type of product and views the relevant results." type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
-      <option name="CUCUMBER_CORE_VERSION" value="5" />
-      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/resources/features/US03_Merve.feature" />
-      <option name="GLUE" value="stepDefinitions hooks" />
-      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
-      <module name="KnotisseProject" />
-      <option name="NAME_FILTER" value="^The user searches for a specific type of product and views the relevant results\.$" />
-      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^The user searches for a specific type of product and views the relevant results\.$&quot;" />
-      <option name="SUGGESTED_NAME" value="Scenario: The user searches for a specific type of product and views the relevant results." />
-      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="io.cucumber.core.cli.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="Runner" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
-      <module name="KnotisseProject" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="runners.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <option name="PACKAGE_NAME" value="runners" />
-      <option name="MAIN_CLASS_NAME" value="runners.Runner" />
-      <option name="TEST_OBJECT" value="class" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-      <list>
-        <item itemvalue="JUnit.Runner" />
-        <item itemvalue="Cucumber Java.Scenario: The user can search using the differet options from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results." />
-        <item itemvalue="Cucumber Java.Scenario: The user can search using the 'VINTAGE' option from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results." />
-        <item itemvalue="Cucumber Java.Scenario: The user searches for a specific type of product and views the relevant results." />
-        <item itemvalue="Cucumber Java.Scenario: The user can perform a search using the 'THROW PILLOWS' option from the dropdown without registering, access the products and their details on the results page, and see the total number of results displayed." />
-      </list>
-  </component>
-  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-  <component name="TaskManager">
-    <task active="true" id="Default" summary="Default task">
-      <changelist id="8aeaeea6-4d09-4f71-a369-474301a18c77" name="Changes" comment="" />
-      <created>1725906429422</created>
-      <option name="number" value="Default" />
-      <option name="presentableId" value="Default" />
-      <updated>1725906429422</updated>
-    </task>
-    <servers />
-  </component>
-  <component name="UnknownFeatures">
-    <option featureType="dependencySupport" implementationName="java:io.cucumber:cucumber-java" />
-    <option featureType="dependencySupport" implementationName="java:io.reactivex.rxjava3:rxjava" />
-    <option featureType="dependencySupport" implementationName="java:org.seleniumhq.selenium:selenium-java" />
-    <option featureType="dependencySupport" implementationName="java:org.projectlombok:lombok" />
-  </component>
-  <component name="Vcs.Log.Tabs.Properties">
-    <option name="TAB_STATES">
-      <map>
-        <entry key="MAIN">
-          <value>
-            <State />
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ /dev/null	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="MavenProjectsManager">
-    <option name="originalFiles">
-      <list>
-        <option value="$PROJECT_DIR$/pom.xml" />
-      </list>
-    </option>
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="corretto-19" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35__Changes_.xml
new file mode 100644
--- /dev/null	(date 1729609554015)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35__Changes_.xml	(date 1729609554015)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_19_10_2024_10_35_[Changes]" date="1729326934411" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 19.10.2024 10:35 [Changes]" />
+</changelist>
\ No newline at end of file
Index: src/test/java/pages/HomePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pages;\n\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.FindAll;\nimport org.openqa.selenium.support.FindBy;\nimport org.openqa.selenium.support.FindBys;\nimport org.openqa.selenium.support.PageFactory;\nimport utilities.Driver;\n\n\npublic class HomePage {\n\n    public HomePage(){\n        PageFactory.initElements(Driver.getDriver(),this);\n    }\n\n    @FindBy(xpath = \"(//a[@href='#search-lightbox'])[1]\")\n    public WebElement searchButtonTopOfHomePage;\n\n    @FindBy(xpath = \"(//i[@class='icon-search'])[1]\")\n    public WebElement searchButtonAfterClickSearchButton;\n\n    @FindBy(xpath = \"//select[@class='search_categories resize-select mb-0']\")\n    public WebElement searchDropdown;\n\n    @FindBy(id = \"woocommerce-product-search-field-0\")\n    public WebElement searchBox;\n\n    @FindBy(linkText = \"CATALOGUE\")\n    public WebElement catalogue;\n\n    @FindBy(xpath = \"//a[@href='https://knotisse.com/new-arrivals/'][1]\")\n    public WebElement newArrivals;\n\n    @FindBy(xpath = \"//a[@href='https://knotisse.com/antique-rugs-turkish-persian/'][1]\")\n    public WebElement antiqueRugs;\n\n    @FindBy(xpath = \"//a[@href='https://knotisse.com/']\")\n    public WebElement homePageLink;\n\n    @FindBy(xpath = \"//h2[@class='uppercase']\")\n    public WebElement homePageAssert;\n\n    @FindBy(xpath = \"//i[@class='icon-instagram'][1]\")\n    public WebElement firstInstagramIcon;\n\n    @FindBy(xpath = \"//a[@href='https://www.pinterest.com/knotisse'][1]\")\n    public WebElement firstPinterestIcon;\n    @FindBy(xpath = \"//a[@href='https://www.youtube.com/@KNOTISSE_FineWeavings'][1]\")\n    public WebElement firstYoutubeIcon;\n\n    @FindBy(xpath = \"//i[@class='icon-facebook'][1]\")\n    public WebElement facebookIconFooter;\n\n    @FindBy(xpath = \"(//i[@class='icon-instagram'])[2]\")\n    public WebElement instagramIconFooter;\n\n    @FindBy(xpath = \"(//a[@href='https://www.youtube.com/@KNOTISSE_FineWeavings'])[2]\")\n    public WebElement youtubeIconFooter;\n\n    @FindBy(xpath = \"//a[@href='https://www.pinterest.com/knotisse/'][1]\")\n    public WebElement pinterestIconFooter;\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/pages/HomePage.java b/src/test/java/pages/HomePage.java
--- a/src/test/java/pages/HomePage.java	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ b/src/test/java/pages/HomePage.java	(date 1729609650450)
@@ -7,6 +7,7 @@
 import org.openqa.selenium.support.PageFactory;
 import utilities.Driver;
 
+import java.util.List;
 
 public class HomePage {
 
@@ -26,6 +27,10 @@
     @FindBy(id = "woocommerce-product-search-field-0")
     public WebElement searchBox;
 
+    @FindBy(xpath = "(//a[@class='nav-top-link'])[1]")
+    public WebElement contactButton;
+
+
     @FindBy(linkText = "CATALOGUE")
     public WebElement catalogue;
 
Index: src/test/resources/features/US03_Merve.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@US03\nFeature: An unregistered user can browse products on the Knottise website both from the top and bottom of the page\n\n  Background:\n    Then The user clicks on the search icon.\n\n#  @US03_TC01\n#  Scenario: The user searches for a specific type of product and views the relevant results.\n#   Then The user types \"Anatolian Kilim Rug\" into the search box.\n#   Then The user clicks the search button.\n#   Then The user sees the total number of results displayed in the window that opens.\n#   Then The user clicks on the first product.\n#   Then The user views the details of the selected product.\n#   Then The user returns to the search box and searches for another specific product.\n#   And The user clicks on one of the available options and views the details of the product that opens.\n\n  @US03_TC02\n  Scenario Outline: The user can search using the differet options from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results.\n    Then While on the \"<options>\", the user clicks on the search button.\n    Then On the results page, the user sees the total number of search results.\n    Then The user clicks on any product with the \"<titles>\"\n    Then The user accesses the details of the selected product.\n    And The user sorts the products based on their preference by selecting an option from the Relevance dropdown chooses \"Default sorting\", \"Sort by popularity\", \"Sort by average rating\", \"Sort by latest\".\n\n    Examples:\n      | options             | titles     |\n      | All                 | Authentic  |\n      | ANTIQUE RUGS        | Antique    |\n      | KNOTISSE PRODUCTION | Handmade   |\n      | SEATING             | Handmade   |\n      | THROW PILLOWS       | Handmade   |\n      | UPHOLSTERY          | Upholstery |\n      | VINTAGE             | Authentic  |\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/features/US03_Merve.feature b/src/test/resources/features/US03_Merve.feature
--- a/src/test/resources/features/US03_Merve.feature	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ b/src/test/resources/features/US03_Merve.feature	(date 1729609554017)
@@ -4,18 +4,18 @@
   Background:
     Then The user clicks on the search icon.
 
-#  @US03_TC01
-#  Scenario: The user searches for a specific type of product and views the relevant results.
-#   Then The user types "Anatolian Kilim Rug" into the search box.
-#   Then The user clicks the search button.
-#   Then The user sees the total number of results displayed in the window that opens.
-#   Then The user clicks on the first product.
-#   Then The user views the details of the selected product.
-#   Then The user returns to the search box and searches for another specific product.
-#   And The user clicks on one of the available options and views the details of the product that opens.
+ @US03_TC01
+ Scenario: The user searches for a specific type of product and views the relevant results.
+  Then The user types "Anatolian Kilim Rug" into the search box.
+  Then The user clicks the search button.
+  Then The user sees the total number of results displayed in the window that opens.
+  Then The user clicks on the first product.
+  Then The user views the details of the selected product.
+  Then The user returns to the search box and searches for another specific product.
+  And The user clicks on one of the available options and views the details of the product that opens.
 
   @US03_TC02
-  Scenario Outline: The user can search using the differet options from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results.
+  Scenario Outline: The user can search using the different options from the dropdown without registering, access the products and product details on the resulting page, and see the total number of results.
     Then While on the "<options>", the user clicks on the search button.
     Then On the results page, the user sees the total number of search results.
     Then The user clicks on any product with the "<titles>"
Index: src/test/java/pages/RandomPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pages;\n\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.FindBy;\nimport org.openqa.selenium.support.PageFactory;\nimport utilities.Driver;\n\nimport java.util.List;\n\npublic class RandomPage {\n\n    public RandomPage(){\n        PageFactory.initElements(Driver.getDriver(),this);\n    }\n    @FindBy(xpath = \"//*[text()='Vintage Anatolian Kilim Rug (Circa 1970) | 183×320 cm 6×10’7 ft |  PR348018']\")\n    public WebElement firstProductAfterAnatolianKilimRugSearch;\n\n    @FindBy(xpath = \"//*[@class='product-title product_title entry-title']\")\n    public WebElement titleOfAfterProductSearch;\n\n    @FindBy (id = \"yith-wcwl-popup-message\")\n    public  WebElement productAddedPopUp;\n\n    @FindBy (xpath =\"//a[@class='quick-view quick-view-added'][1]\")\n    public  WebElement quickView;\n\n    @FindBy(xpath = \"//select[contains(@class, 'orderby')]\")\n    public List<WebElement> randomSortingDropdown;\n\n    @FindBy (xpath =\"(//span[@class='x1lliihq x193iq5w x6ikm8r x10wlt62 xlyipyv xuxw1ft'])[1]\")\n    public  WebElement knotisseInstagramAssert;\n\n    @FindBy (xpath =\"//div[@data-test-id='profile-name']\")\n    public  WebElement knotissePinterestAssert;\n\n    @FindBy (xpath =\"//span[@class='yt-core-attributed-string yt-core-attributed-string--white-space-pre-wrap'][1]\")\n    public  WebElement knotisseYoutubeAssert;\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/pages/RandomPage.java b/src/test/java/pages/RandomPage.java
--- a/src/test/java/pages/RandomPage.java	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ b/src/test/java/pages/RandomPage.java	(date 1729609694854)
@@ -18,6 +18,9 @@
     @FindBy(xpath = "//*[@class='product-title product_title entry-title']")
     public WebElement titleOfAfterProductSearch;
 
+    @FindBy(xpath = "(//*[@class='plain'])[1]")
+    public WebElement titleOfAfterProductSearchInPopUp;
+
     @FindBy (id = "yith-wcwl-popup-message")
     public  WebElement productAddedPopUp;
 
@@ -27,6 +30,10 @@
     @FindBy(xpath = "//select[contains(@class, 'orderby')]")
     public List<WebElement> randomSortingDropdown;
 
+    @FindBy(xpath = "//div[contains(@class, 'box-text box-text-products')]")
+    public List<WebElement> randomProductTitleList;
+
+
     @FindBy (xpath ="(//span[@class='x1lliihq x193iq5w x6ikm8r x10wlt62 xlyipyv xuxw1ft'])[1]")
     public  WebElement knotisseInstagramAssert;
 
Index: src/test/java/pages/KnotisseComPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/pages/KnotisseComPage.java b/src/test/java/pages/KnotisseComPage.java
new file mode 100644
--- /dev/null	(date 1729609554016)
+++ b/src/test/java/pages/KnotisseComPage.java	(date 1729609554016)
@@ -0,0 +1,40 @@
+package pages;
+
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.support.FindBy;
+import org.openqa.selenium.support.PageFactory;
+import utilities.Driver;
+
+public class KnotisseComPage {
+
+    public KnotisseComPage() {
+        PageFactory.initElements(Driver.getDriver(), this);
+    }
+
+    @FindBy(xpath = "//h1[@class='uppercase']")
+    public WebElement titleInContactPage;
+
+    @FindBy(xpath = "//div[@class='wpforms-field-row-block wpforms-first wpforms-one-half']")
+    public WebElement nameBoxInContactPage;
+
+    @FindBy(xpath = "//input[@id='wpforms-5134-field_0-last']")
+    public WebElement surnameBoxInContactPage;
+
+    @FindBy(xpath = "//input[@id='wpforms-5134-field_1']")
+    public WebElement emailBoxInContactPage;
+
+    @FindBy(xpath = "//input[@id='wpforms-5134-field_3']")
+    public WebElement phoneBoxInContactPage;
+
+    @FindBy(xpath = "//textarea[@id='wpforms-5134-field_2']")
+    public WebElement messageBoxInContactPage;
+
+    @FindBy(xpath = "//input[@id='wpforms-5134-field_6_1']")
+    public WebElement checkBoxInContactPage;
+
+    @FindBy(id = "wpforms-submit-5134")
+    public WebElement submitButtonInContactPage;
+
+
+
+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1729609554016)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36_[Changes]/shelved.patch	(date 1729609554016)
@@ -0,0 +1,158 @@
+Index: src/test/java/stepDefinitions/US01_Fatma_StepDefs.java
+===================================================================
+diff --git a/src/test/java/stepDefinitions/US01_Fatma_StepDefs.java b/src/test/java/stepDefinitions/US01_Fatma_StepDefs.java
+deleted file mode 100644
+--- a/src/test/java/stepDefinitions/US01_Fatma_StepDefs.java	(revision 52fbe914bb12e55dd9c4d50391de4be23a1c936f)
++++ /dev/null	(revision 52fbe914bb12e55dd9c4d50391de4be23a1c936f)
+@@ -1,123 +0,0 @@
+-package stepDefinitions;
+-
+-import io.cucumber.java.en.Then;
+-import io.cucumber.java.en.When;
+-import org.junit.Assert;
+-import org.openqa.selenium.support.ui.Select;
+-import org.openqa.selenium.support.ui.Wait;
+-import pages.CataloguePage;
+-import pages.HomePage;
+-import utilities.*;
+-
+-
+-public class US01_Fatma_StepDefs {
+-    HomePage homePage = new HomePage();
+-
+-    CataloguePage catalogue = new CataloguePage();
+-
+-
+-    //-------------------------------------------TC01---------------------------------------------------------------
+-
+-    @When("user navigates to the relevant website.")
+-    public void user_navigates_to_the_relative_website() {
+-        Driver.getDriver().get(ConfigReader.getProperty("baseUrl"));
+-    }
+-
+-    @Then("Clicks on Catalogue.")
+-    public void clicks_on_catalogue() {
+-        homePage.catalogue.click();
+-    }
+-
+-    @Then("Verifies that related products show up.")
+-    public void verifies_that_related_products_show_up() {
+-        ReusableMethods.flashElement(homePage.catalogue);
+-    }
+-
+-    @Then("Navigates to the New Arrivals link.")
+-    public void navigates_to_the_new_arrivals_link() {
+-        homePage.newArrivals.click();
+-        ReusableMethods.flashElement(homePage.newArrivals);
+-    }
+-
+-    @Then("Clicks on Catalogue again.")
+-    public void clicks_on_catalogue_again() {
+-        homePage.catalogue.click();
+-    }
+-
+-
+-    // -------------------------------------------TC02---------------------------------------------------------------
+-
+-
+-    @Then("Verifies that product details are clearly displayed.")
+-    public void verifies_that_product_details_are_clearly_displayed() {
+-
+-        Assert.assertTrue(catalogue.firstCatalogueDetail.isDisplayed());
+-        JSUtils.JSscrollIntoView(catalogue.firstCatalogueDetail);
+-        ReusableMethods.flashElement(catalogue.firstCatalogueDetail);
+-
+-    }
+-
+-
+-    // -------------------------------------------TC03---------------------------------------------------------------
+-
+-
+-    @Then("Clicks on the Default sorting menu on the catalog page.")
+-    public void clicks_on_the_default_sorting_menu_on_the_catalog_page() {
+-        catalogue.orderDropdown.click();
+-    }
+-
+-    @Then("Selects the Sort by average rating option.")
+-    public void selects_the_sort_by_average_rating_option() {
+-        Select select = new Select(catalogue.orderDropdown);
+-        select.selectByVisibleText("Sort by average rating");
+-    }
+-
+-    @Then("Verifies that the sorting is done based on average rating.")
+-    public void verifies_that_the_sorting_is_done_based_on_average_rating() {
+-
+-        Select select = new Select(catalogue.orderDropdown);
+-        String selectedOption = select.getFirstSelectedOption().getText();
+-        Assert.assertEquals("Sort by average rating", selectedOption);
+-
+-    }
+-
+-
+-    // -------------------------------------------TC04---------------------------------------------------------------
+-
+-    @Then("Selects the Sort by latest option.")
+-    public void selects_the_sort_by_latest_option() {
+-        Select select = new Select(catalogue.orderDropdown);
+-        select.selectByVisibleText("Sort by latest");
+-    }
+-
+-
+-    @Then("Verifies that the sorting is done based on the newest products.")
+-    public void verifies_that_the_sorting_is_done_based_on_the_newest_products() {
+-
+-        Select select = new Select(catalogue.orderDropdown);
+-        String selectedOption = select.getFirstSelectedOption().getText();
+-        Assert.assertEquals("Sort by latest", selectedOption);
+-
+-    }
+-
+-
+-    // -------------------------------------------TC05---------------------------------------------------------------
+-
+-    @Then("Selects the Sort by popularity sorting option.")
+-    public void selects_the_sort_by_popularity_sorting_option() {
+-
+-        Select select = new Select(catalogue.orderDropdown);
+-        select.selectByVisibleText("Sort by popularity");
+-
+-    }
+-
+-    @Then("Verifies  that the sorting is done based on the most popular products.")
+-    public void verifies_that_the_sorting_is_done_based_on_the_most_popular_products() {
+-
+-        Select select = new Select(catalogue.orderDropdown);
+-        String selectedOption = select.getFirstSelectedOption().getText();
+-        Assert.assertEquals("Sort by popularity", selectedOption);
+-
+-    }
+-
+-}
+Index: src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java
+===================================================================
+diff --git a/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java b/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java
+deleted file mode 100644
+--- a/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java	(revision 52fbe914bb12e55dd9c4d50391de4be23a1c936f)
++++ /dev/null	(revision 52fbe914bb12e55dd9c4d50391de4be23a1c936f)
+@@ -1,21 +0,0 @@
+-package stepDefinitions;
+-
+-import io.cucumber.java.en.Then;
+-import io.cucumber.java.en.When;
+-import utilities.ConfigReader;
+-import utilities.Driver;
+-
+-
+-public class US06_Sümeyye_StepDefs {
+-
+-    @When("İlgili web siteye gidilir")
+-    public void i̇lgili_web_siteye_gidilir() throws InterruptedException {
+-
+-        Driver.getDriver().get(ConfigReader.getProperty("baseUrl"));
+-    }
+-
+-
+-
+-
+-
+-}
Index: src/test/java/stepDefinitions/US09_Merve_StepDefs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/stepDefinitions/US09_Merve_StepDefs.java b/src/test/java/stepDefinitions/US09_Merve_StepDefs.java
new file mode 100644
--- /dev/null	(date 1729609554017)
+++ b/src/test/java/stepDefinitions/US09_Merve_StepDefs.java	(date 1729609554017)
@@ -0,0 +1,70 @@
+package stepDefinitions;
+
+import com.github.javafaker.Faker;
+import io.cucumber.java.en.Given;
+import io.cucumber.java.en.Then;
+import org.junit.Assert;
+import org.openqa.selenium.interactions.Actions;
+import pages.HomePage;
+import pages.KnotisseComPage;
+import utilities.Driver;
+
+
+public class US09_Merve_StepDefs {
+
+
+    HomePage homePage = new HomePage();
+    KnotisseComPage knotisseComPage = new KnotisseComPage();
+    Faker faker = new Faker();
+
+    @Given("The visibility and clickability of the Contact button are verified.")
+    public void theVisibilityAndClickabilityOfTheContactButtonAreVerified() {
+
+        Assert.assertTrue(homePage.contactButton.isDisplayed());
+        Assert.assertTrue(homePage.contactButton.isEnabled());
+
+    }
+
+
+    @Then("It is verified that when the Contact button is clicked, a page containing a contact form opens.")
+    public void itIsVerifiedThatWhenTheContactButtonIsClickedAPageContainingAContactFormOpens() {
+
+        homePage.contactButton.click();
+        Assert.assertTrue(knotisseComPage.titleInContactPage.isDisplayed());
+    }
+
+    @Then("The visibility of the name, email, phone number, and message fields in the contact form, as well as the ability to enter information into them, is verified.")
+    public void the_visibility_of_the_name_email_phone_number_and_message_fields_in_the_contact_form_as_well_as_the_ability_to_enter_information_into_them_is_verified() {
+
+        Assert.assertTrue(knotisseComPage.nameBoxInContactPage.isDisplayed());
+        Assert.assertTrue(knotisseComPage.surnameBoxInContactPage.isDisplayed());
+        Assert.assertTrue(knotisseComPage.emailBoxInContactPage.isDisplayed());
+        Assert.assertTrue(knotisseComPage.phoneBoxInContactPage.isDisplayed());
+        Assert.assertTrue(knotisseComPage.messageBoxInContactPage.isDisplayed());
+        Assert.assertTrue(knotisseComPage.checkBoxInContactPage.isDisplayed());
+        Assert.assertTrue(knotisseComPage.submitButtonInContactPage.isDisplayed());
+        Assert.assertTrue(knotisseComPage.nameBoxInContactPage.isEnabled());
+        Assert.assertTrue(knotisseComPage.surnameBoxInContactPage.isEnabled());
+        Assert.assertTrue(knotisseComPage.emailBoxInContactPage.isEnabled());
+        Assert.assertTrue(knotisseComPage.phoneBoxInContactPage.isEnabled());
+        Assert.assertTrue(knotisseComPage.messageBoxInContactPage.isEnabled());
+        Assert.assertTrue(knotisseComPage.checkBoxInContactPage.isEnabled());
+        Assert.assertTrue(knotisseComPage.submitButtonInContactPage.isEnabled());
+
+    }
+
+    @Then("It is verified that a message can be sent by entering the name, email, phone number, and message details into the contact form.")
+    public void it_is_verified_that_a_message_can_be_sent_by_entering_the_name_email_phone_number_and_message_details_into_the_contact_form() {
+
+        Actions actions = new Actions(Driver.getDriver());
+        actions.sendKeys(knotisseComPage.nameBoxInContactPage, faker.name().firstName())
+                .sendKeys(knotisseComPage.surnameBoxInContactPage, faker.name().lastName())
+                .sendKeys(knotisseComPage.emailBoxInContactPage, faker.internet().emailAddress())
+                .sendKeys(knotisseComPage.phoneBoxInContactPage, faker.phoneNumber().phoneNumber())
+                .sendKeys(knotisseComPage.messageBoxInContactPage, faker.lorem().paragraph()).perform();
+        Assert.assertTrue(knotisseComPage.checkBoxInContactPage.isEnabled());
+        Assert.assertTrue(knotisseComPage.submitButtonInContactPage.isEnabled());
+    }
+
+
+}
Index: src/test/java/stepDefinitions/US03_Merve_StepDefs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package stepDefinitions;\n\nimport io.cucumber.java.en.And;\nimport io.cucumber.java.en.Then;\nimport org.junit.Assert;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.StaleElementReferenceException;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.ui.Select;\nimport pages.CataloguePage;\nimport pages.HomePage;\nimport pages.PillowsPage;\nimport pages.RandomPage;\nimport utilities.Driver;\nimport utilities.ReusableMethods;\nimport utilities.WaitUtils;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Random;\n\npublic class US03_Merve_StepDefs {\n\n    HomePage homePage = new HomePage();\n    CataloguePage cataloguePage = new CataloguePage();\n    RandomPage randomPage = new RandomPage();\n    PillowsPage pillowsPage = new PillowsPage();\n    Random rnd = new Random();\n    WaitUtils waitUtils = new WaitUtils();\n    Select dropdown;\n\n    @Then(\"The user clicks on the search icon.\")\n    public void the_user_clicks_on_the_search_icon() {\n        ReusableMethods.click(homePage.searchButtonTopOfHomePage);\n    }\n\n    @Then(\"The user types {string} into the search box.\")\n    public void the_user_types_into_the_search_box(String string) {\n        ReusableMethods.visibleWait(homePage.searchButtonTopOfHomePage, 2);\n        homePage.searchButtonTopOfHomePage.sendKeys(string);\n    }\n\n    @Then(\"The user clicks the search button.\")\n    public void the_user_clicks_the_search_button() {\n        ReusableMethods.click(homePage.searchButtonAfterClickSearchButton);\n    }\n\n    @Then(\"The user sees the total number of results displayed in the window that opens.\")\n    public void the_user_sees_the_total_number_of_results_displayed_in_the_window_that_opens() {\n        Assert.assertTrue(\"The user doesn't see the total number of results displayed in the window that opens.\",\n                cataloguePage.numberOfResultsAfterProductSearch.isDisplayed());\n    }\n\n    @Then(\"The user clicks on the first product.\")\n    public void the_user_clicks_on_the_first_product() {\n        ReusableMethods.click(randomPage.firstProductAfterAnatolianKilimRugSearch);\n    }\n\n    @Then(\"The user views the details of the selected product.\")\n    public void the_user_views_the_details_of_the_selected_product() {\n        ReusableMethods.visibleWait(randomPage.titleOfAfterProductSearch, 5);\n        Assert.assertTrue(\"The user doesn't view the details of the selected product\",\n                randomPage.titleOfAfterProductSearch.isDisplayed());\n    }\n\n    @Then(\"The user returns to the search box and searches for another specific product.\")\n    public void the_user_returns_to_the_search_box_and_searches_for_another_specific_product() {\n        ReusableMethods.click(homePage.searchButtonTopOfHomePage);\n        List<String> randomTitleList = Arrays.asList(\"ANTIQUE RUGS\", \"KNOTISSE PRODUCTION\", \"SEATING\", \"THROW PILLOWS\", \"UPHOLSTERY\", \"VINTAGE\");\n        for (int i = 0; i < 5; ) {\n            int randomIndex = rnd.nextInt(randomTitleList.size());\n            homePage.searchButtonTopOfHomePage.sendKeys(randomTitleList.get(randomIndex));\n            break;\n        }\n        ReusableMethods.click(homePage.searchButtonAfterClickSearchButton);\n    }\n\n    //   @Then(\"The user clicks on one of the available options and views the details of the product that opens.\")\n    //  public void the_user_clicks_on_one_of_the_available_options_and_views_the_details_of_the_product_that_opens() {\n    //    int randomNumber = 1 + rnd.nextInt(7);\n    //        Map<String, String> productCategories = new HashMap<String, String>() {{\n    //            put(\"All\", \"Authentic\"); put(\"ANTIQUE RUGS\", \"Antique\"); put(\"KNOTISSE PRODUCTION\", \"Handmade\"); put(\"SEATING\", \"Handmade\"); put(\"THROW PILLOWS\", \"Throw Pillow\"); put(\"UPHOLSTERY\", \"Upholstery\"); put(\"VINTAGE\", \"Vintage\");\n    //        }};\n//            ReusableMethods.click(homePage.searchButtonTopOfHomePage);\n//\n//                String[] keys = productCategories.keySet().toArray(new String[0]);\n//                String randomKey = keys[new Random().nextInt(keys.length)];\n//                homePage.searchBox.sendKeys(randomKey);\n//                homePage.searchButtonAfterClickSearchButton.click();\n//                System.out.println(\"cataloguePage.searchResultsForText.getText() = \" + cataloguePage.searchResultsForText.getText());\n\n    //      for (Map.Entry<String, String> entry : productCategories.entrySet()) {\n    //              if (cataloguePage.searchResultsForText.getText().contains(entry.getKey())) {\n    //                  WebElement randomProduct = Driver.getDriver().findElement(By.xpath(\"(//a[contains(.,'\" + entry.getValue() + \"')])[\" + randomNumber + \"]\"));\n    //                  JavascriptExecutor js = (JavascriptExecutor) Driver.getDriver();\n    //                  js.executeScript(\"arguments[0].click();\", randomProduct);\n    //                  System.out.println(\"randomProduct = \" + randomProduct);\n    //              }\n    //          }\n    //      ReusableMethods.wait(5);\n    //      ReusableMethods.visibleWait(randomPage.titleOfAfterProductSearch, 5);\n    //      Assert.assertTrue(\"The user doesn't view the details of the selected product\",\n    //              randomPage.titleOfAfterProductSearch.isDisplayed());\n    //   }\n\n\n    @Then(\"On the results page, the user sees the total number of search results.\")\n    public void on_the_results_page_the_user_sees_the_total_number_of_search_results() {\n\n        if (!Driver.getDriver().findElements(By.xpath(\"//div[@class='message-container container medium-text-center']\")).isEmpty()) {\n\n            if (pillowsPage.noProductsWereFoundMatchingYourSelectionText.isDisplayed()) {\n                Assert.assertFalse(\"clickable to related product\",\n                        pillowsPage.noProductsWereFoundMatchingYourSelectionText.isDisplayed());\n            }\n        } else {\n            Assert.assertTrue(\"On the results page, the user doesn't see the total number of search results.\",\n                    cataloguePage.numberOfResultsAfterProductSearch.isDisplayed());\n        }\n    }\n\n\n    @Then(\"The user accesses the details of the selected product.\")\n    public void the_user_accesses_the_details_of_the_selected_product() {\n        ReusableMethods.visibleWait(randomPage.titleOfAfterProductSearch, 5);\n        Assert.assertTrue(\"The user doesn't access the details of the selected product.\",\n                randomPage.titleOfAfterProductSearch.isDisplayed());\n    }\n\n\n    @Then(\"The user sorts the products based on their preference by selecting an option from the Relevance dropdown chooses {string}.\")\n    public void the_user_sorts_the_products_based_on_their_preference_by_selecting_an_option_from_the_relevance_dropdown_chooses(String string) {\n        cataloguePage.catalogueMenu.click();\n        WebElement sortByElement = Driver.getDriver().findElement(By.xpath(\"//*[text()='\" + string + \"']\"));\n        ReusableMethods.click(sortByElement);\n    }\n\n\n    @Then(\"While on the {string}, the user clicks on the search button.\")\n    public void whileOnTheTheUserClicksOnTheSearchButton(String option) {\n        dropdown = new Select(homePage.searchDropdown);\n        ReusableMethods.wait(6);\n        dropdown.selectByVisibleText(option);\n        waitUtils.waitForClickablility(homePage.searchButtonAfterClickSearchButton, 10);\n        ReusableMethods.click(homePage.searchButtonAfterClickSearchButton);\n        ReusableMethods.scrollHome();\n\n    }\n\n\n    @Then(\"The user clicks on any product with the {string}\")\n    public void theUserClicksOnAnyProductWithThe(String title) {\n        int randomNumber = 1 + rnd.nextInt(8);\n        WebElement randomProduct = Driver.getDriver().findElement(By.xpath(\"(//a[contains(.,'\" + title + \"')])[\" + randomNumber + \"]\"));\n        ReusableMethods.wait(6);\n        try {\n            waitUtils.waitForClickablility(randomProduct, 10);\n            ReusableMethods.click(randomProduct);\n        } catch (StaleElementReferenceException e) {\n\n        }\n        ReusableMethods.wait(5);\n    }\n\n\n    @And(\"The user sorts the products based on their preference by selecting an option from the Relevance dropdown chooses {string}, {string}, {string}, {string}.\")\n    public void theUserSortsTheProductsBasedOnTheirPreferenceBySelectingAnOptionFromTheRelevanceDropdownChooses(String defaultSorting, String sortByPopularity, String sortByAverageRating, String sortByLatest) {\n        String[] sortingOptions = {defaultSorting, sortByPopularity, sortByAverageRating, sortByLatest};\n        int randomIndex = rnd.nextInt(sortingOptions.length);\n        String randomSelectedOption = sortingOptions[randomIndex];\n        for (WebElement randomSortingOption : randomPage.randomSortingDropdown) {\n            if (randomSortingOption.getText().equalsIgnoreCase(randomSelectedOption)) {\n                ReusableMethods.click(randomSortingOption);\n                break;\n            }\n        }\n        ReusableMethods.wait(5);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/stepDefinitions/US03_Merve_StepDefs.java b/src/test/java/stepDefinitions/US03_Merve_StepDefs.java
--- a/src/test/java/stepDefinitions/US03_Merve_StepDefs.java	(revision 98878e8be51c45b76abe2c35ee07db7d7d5eb8aa)
+++ b/src/test/java/stepDefinitions/US03_Merve_StepDefs.java	(date 1729609554017)
@@ -26,7 +26,6 @@
     RandomPage randomPage = new RandomPage();
     PillowsPage pillowsPage = new PillowsPage();
     Random rnd = new Random();
-    WaitUtils waitUtils = new WaitUtils();
     Select dropdown;
 
     @Then("The user clicks on the search icon.")
@@ -67,41 +66,25 @@
     public void the_user_returns_to_the_search_box_and_searches_for_another_specific_product() {
         ReusableMethods.click(homePage.searchButtonTopOfHomePage);
         List<String> randomTitleList = Arrays.asList("ANTIQUE RUGS", "KNOTISSE PRODUCTION", "SEATING", "THROW PILLOWS", "UPHOLSTERY", "VINTAGE");
-        for (int i = 0; i < 5; ) {
-            int randomIndex = rnd.nextInt(randomTitleList.size());
-            homePage.searchButtonTopOfHomePage.sendKeys(randomTitleList.get(randomIndex));
-            break;
-        }
+        int randomIndex = rnd.nextInt(randomTitleList.size());
+        homePage.searchButtonTopOfHomePage.sendKeys(randomTitleList.get(randomIndex));
         ReusableMethods.click(homePage.searchButtonAfterClickSearchButton);
     }
 
-    //   @Then("The user clicks on one of the available options and views the details of the product that opens.")
-    //  public void the_user_clicks_on_one_of_the_available_options_and_views_the_details_of_the_product_that_opens() {
-    //    int randomNumber = 1 + rnd.nextInt(7);
-    //        Map<String, String> productCategories = new HashMap<String, String>() {{
-    //            put("All", "Authentic"); put("ANTIQUE RUGS", "Antique"); put("KNOTISSE PRODUCTION", "Handmade"); put("SEATING", "Handmade"); put("THROW PILLOWS", "Throw Pillow"); put("UPHOLSTERY", "Upholstery"); put("VINTAGE", "Vintage");
-    //        }};
-//            ReusableMethods.click(homePage.searchButtonTopOfHomePage);
-//
-//                String[] keys = productCategories.keySet().toArray(new String[0]);
-//                String randomKey = keys[new Random().nextInt(keys.length)];
-//                homePage.searchBox.sendKeys(randomKey);
-//                homePage.searchButtonAfterClickSearchButton.click();
-//                System.out.println("cataloguePage.searchResultsForText.getText() = " + cataloguePage.searchResultsForText.getText());
+    @Then("The user clicks on one of the available options and views the details of the product that opens.")
+    public void the_user_clicks_on_one_of_the_available_options_and_views_the_details_of_the_product_that_opens() {
+        int randomIndex = 1 + rnd.nextInt(10);
+        WebElement randomProduct = Driver.getDriver().findElement(By.xpath(("(" + "//*[contains(@class, 'quick-view quick-view-added')])") + "[" + randomIndex + "]"));
+        try {
+            ReusableMethods.click(randomProduct);
+            ReusableMethods.wait(20);
+        } catch (StaleElementReferenceException e) {
+        }
 
-    //      for (Map.Entry<String, String> entry : productCategories.entrySet()) {
-    //              if (cataloguePage.searchResultsForText.getText().contains(entry.getKey())) {
-    //                  WebElement randomProduct = Driver.getDriver().findElement(By.xpath("(//a[contains(.,'" + entry.getValue() + "')])[" + randomNumber + "]"));
-    //                  JavascriptExecutor js = (JavascriptExecutor) Driver.getDriver();
-    //                  js.executeScript("arguments[0].click();", randomProduct);
-    //                  System.out.println("randomProduct = " + randomProduct);
-    //              }
-    //          }
-    //      ReusableMethods.wait(5);
-    //      ReusableMethods.visibleWait(randomPage.titleOfAfterProductSearch, 5);
-    //      Assert.assertTrue("The user doesn't view the details of the selected product",
-    //              randomPage.titleOfAfterProductSearch.isDisplayed());
-    //   }
+        ReusableMethods.visibleWait(randomPage.titleOfAfterProductSearchInPopUp, 10);
+        Assert.assertTrue("The user doesn't view the details of the selected product",
+                randomPage.titleOfAfterProductSearchInPopUp.isDisplayed());
+    }
 
 
     @Then("On the results page, the user sees the total number of search results.")
@@ -141,7 +124,7 @@
         dropdown = new Select(homePage.searchDropdown);
         ReusableMethods.wait(6);
         dropdown.selectByVisibleText(option);
-        waitUtils.waitForClickablility(homePage.searchButtonAfterClickSearchButton, 10);
+        WaitUtils.waitForClickablility(homePage.searchButtonAfterClickSearchButton, 10);
         ReusableMethods.click(homePage.searchButtonAfterClickSearchButton);
         ReusableMethods.scrollHome();
 
@@ -154,7 +137,7 @@
         WebElement randomProduct = Driver.getDriver().findElement(By.xpath("(//a[contains(.,'" + title + "')])[" + randomNumber + "]"));
         ReusableMethods.wait(6);
         try {
-            waitUtils.waitForClickablility(randomProduct, 10);
+            WaitUtils.waitForClickablility(randomProduct, 10);
             ReusableMethods.click(randomProduct);
         } catch (StaleElementReferenceException e) {
 
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36__Changes_.xml
new file mode 100644
--- /dev/null	(date 1729609554016)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36__Changes_.xml	(date 1729609554016)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_19_10_2024_10_36_[Changes]" date="1729326985137" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_36_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 19.10.2024 10:36 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1729609554015)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_10_2024_10_35_[Changes]/shelved.patch	(date 1729609554015)
@@ -0,0 +1,70 @@
+Index: src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java
+===================================================================
+diff --git a/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java b/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java
+deleted file mode 100644
+--- a/src/test/java/stepDefinitions/US06_Sümeyye_StepDefs.java	(revision 96defbe5fb18e835f896c2bd8984630b12639c4f)
++++ /dev/null	(revision 96defbe5fb18e835f896c2bd8984630b12639c4f)
+@@ -1,21 +0,0 @@
+-package stepDefinitions;
+-
+-import io.cucumber.java.en.Then;
+-import io.cucumber.java.en.When;
+-import utilities.ConfigReader;
+-import utilities.Driver;
+-
+-
+-public class US06_Sümeyye_StepDefs {
+-
+-    @When("İlgili web siteye gidilir")
+-    public void i̇lgili_web_siteye_gidilir() throws InterruptedException {
+-
+-        Driver.getDriver().get(ConfigReader.getProperty("baseUrl"));
+-    }
+-
+-
+-
+-
+-
+-}
+Index: src/test/java/stepDefinitions/US01_Fatma_StepDefs.java
+===================================================================
+diff --git a/src/test/java/stepDefinitions/US01_Fatma_StepDefs.java b/src/test/java/stepDefinitions/US01_Fatma_StepDefs.java
+deleted file mode 100644
+--- a/src/test/java/stepDefinitions/US01_Fatma_StepDefs.java	(revision 96defbe5fb18e835f896c2bd8984630b12639c4f)
++++ /dev/null	(revision 96defbe5fb18e835f896c2bd8984630b12639c4f)
+@@ -1,35 +0,0 @@
+-package stepDefinitions;
+-
+-import io.cucumber.java.en.Then;
+-import io.cucumber.java.en.When;
+-import org.openqa.selenium.support.ui.Wait;
+-import utilities.ConfigReader;
+-import utilities.Driver;
+-
+-
+-public class US01_Fatma_StepDefs {
+-
+-    @When("İlgili web siteye gidilir.")
+-    public void i̇lgili_web_siteye_gidilir() throws InterruptedException {
+-
+-        Driver.getDriver().get(ConfigReader.getProperty("baseUrl"));
+-    }
+-
+-    @Then("Home page üzerinden {string} menüsüne tıklanır.")
+-    public void home_page_üzerinden_menüsüne_tıklanır(String string) {
+-
+-
+-    }
+-    @Then("İlgili ürünlerin listelendiği doğrulanır.")
+-    public void i̇lgili_ürünlerin_listelendiği_doğrulanır() {
+-
+-    }
+-    @Then("Alternatif olarak, başka bir sayfa üzerinden \\(örn. new arrivals sayfası) {string} menüsüne tıklanır.")
+-    public void alternatif_olarak_başka_bir_sayfa_üzerinden_örn_new_arrivals_sayfası_menüsüne_tıklanır(String string) {
+-
+-    }
+-
+-
+-
+-
+-}
